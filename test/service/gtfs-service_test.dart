import 'dart:ffi';

import 'package:busneighbor_flutter/model/gtfsLocations.dart';
import 'package:busneighbor_flutter/service/constants/direction-map.dart';
import 'package:test/test.dart';
import 'dart:io';
import 'package:busneighbor_flutter/service/gtfs-service.dart';
import 'package:collection/collection.dart';

void main() {
  final File readData = File("test/stubs/rtVehiclePosition.pb");
  final buffer = readData.readAsBytesSync();

  final expectedVehicles = [
    '9109',
    '9077',
    '9051',
    '9010',
    '3701',
    '3729',
    '3079',
    '3272',
    '3500',
    '3702',
    '3726',
    '3384',
    '3468',
    '3263',
    '3728',
    '3707',
    '3706',
    '3461',
    '9053',
    '9031',
    '3472',
    '3467',
    '3478',
    '3705',
    '3474',
    '3264',
    '3260',
    '3700',
    '3473',
    '3485',
    '3062',
    '3070',
    '3465',
    '3273',
    '3380',
    '3261',
    '3453',
    '3082',
    '3074',
    '3439',
    '3107',
    '3499',
    '3731',
    '3595',
    '3619',
    '3480',
    '3483',
    '3066',
    '3629',
    '3598',
    '3206',
    '9050',
    '3203',
    '3597',
    '3128',
    '8476',
    '3196',
    '3219',
    '7371',
    '8684',
    '7441',
    '7365',
    '3021',
    '3035',
    '3407',
    '8484',
    '8428',
    '3330',
    '3324',
    '7466',
    '7468',
    '7474',
    '7352',
    '7347',
    '7335',
    '7358',
    '8280',
    '8344',
    '8459',
    '8189',
    '8665',
    '3053',
    '3668',
    '3667',
    '3642',
    '3693',
    '7455',
    '7427',
    '7465',
    '8375',
    '8270',
    '8545',
    '3339',
    '3238',
    '3760',
    '3348',
    '3167',
    '8604',
    '8627',
    '8556',
    '8238',
    '3093',
    '3428',
    '7316',
    '7318',
    '8191',
    '3289',
    '3346',
    '3157',
    '8434',
    '3669',
    '8541',
    '3243',
    '8550',
    '3338',
    '7378',
    '7406',
    '9065',
    '9106',
    '9063',
    '9040',
    '9092',
    '9094',
    '8457',
    '3587',
    '3549',
    '3036',
    '3012',
    '8624',
    '3306',
    '3091',
    '3059',
    '3696',
    '3051',
    '3660',
    '3004',
    '8488',
    '3694',
    '3683',
    '3665',
    '8467',
    '8453',
    '3436',
    '3010',
    '3011',
    '3341',
    '8551',
    '3572',
    '3560',
    '3112',
    '7323',
    '7388',
    '7382',
    '8531',
    '8528',
    '3358',
    '8409',
    '8657',
    '3366',
    '3654',
    '3640',
    '3697',
    '3659',
    '8254',
    '8633',
    '7307',
    '7324',
    '7424',
    '8559',
    '7423',
    '7348',
    '7458',
    '7462',
    '7421',
    '7459',
    '3318',
    '3240',
    '3098',
    '8460',
    '8506',
    '8677',
    '8683',
    '8670',
    '812',
    '800',
    '7393',
    '7308',
    '7384',
    '7395',
    '8606',
    '8622',
    '8609',
    '3538',
    '3590',
    '3545',
    '3645',
    '8487',
    '3038',
    '3662',
    '811',
    '814',
    '801',
    '817',
    '8402',
    '8501',
    '3275',
    '3437',
    '3447',
    '3557',
    '8461',
    '8666',
    '8195',
    '3378',
    '8663',
    '3284',
    '3351',
    '3539',
    '8510',
    '8519',
    '8676',
    '3322',
    '3415',
    '3425',
    '3424',
    '3201',
    '3637',
    '3227',
    '3631',
    '8643',
    '8689',
    '3530',
    '3085',
    '3569',
    '3442',
    '3543',
    '3578',
    '8456',
    '3337',
    '8266',
    '3520',
    '3166',
    '8315',
    '3518',
    '8406',
    '3511',
    '8289',
    '8283',
    '8296',
    '8356',
    '132',
    '144',
    '8316',
    '3132',
    '3135',
    '8265',
    '8642'
  ];

  test('A known protobuf is converted to the correct vehicle positions', () {
    var vehiclePositions = GtfsService.getVehiclePositions(buffer);
    var lastPosition = vehiclePositions[258];

    expect(vehiclePositions.length == 259, true);
    expect(lastPosition.timestamp == 1740105467, true);
    expect(lastPosition.position.bearing == 344.57000732421875, true);
    expect(lastPosition.position.latitude == 40.016090393066406, true);
    expect(lastPosition.trip.routeId == "XH", true);
  });

  test('A known protobuf is processed to a correct hierarchy', () {
    var positions = GtfsService.getVehiclePositions(buffer);
    GtfsLocations processed =
        GtfsService.vehiclePositionsToGtfsLocations(positions);
    expect(processed.locationsMap.length == 99, true); // 99 routes in sample
    expect(
        processed.locationsMap["4"]?.keys.length == 2, true); // two directions
    expect(
        processed.locationsMap["XH"]?[1]?["8642"]?.latitude ==
            40.016090393066406,
        true);
    expect(processed.vehicleIdToSource.keys.toList(), expectedVehicles);
  });

  test('Test direction decoder', () {
    expect(GtfsService.provideDirection("45", 0), SOUTHBOUND);
    expect(GtfsService.provideDirection("45", 1), NORTHBOUND);
    expect(GtfsService.provideDirection("45", 2), null);
    expect(GtfsService.provideDirection("55", 0), NORTHBOUND);
    expect(GtfsService.provideDirection("55", 1), SOUTHBOUND);
    expect(GtfsService.provideDirection("55", 2), null);
    expect(GtfsService.provideDirection("64", 0), WESTBOUND);
    expect(GtfsService.provideDirection("64", 1), EASTBOUND);
    expect(GtfsService.provideDirection("64", 100), null);
    expect(GtfsService.provideDirection("35", 0), LOOP);
    expect(GtfsService.provideDirection("Werewolf", 0), null);
  });
}
